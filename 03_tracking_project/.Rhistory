library(tidyverse)
library (StatsBombR)
## Import SB Data ## -------------
Comp <- FreeCompetitions()
Matches <- FreeMatches(Comp)
Matches = Matches %>% filter(competition.competition_name=="UEFA Euro")
data360 <- StatsBombFree360Events(MatchesDF = Matches, Parallel = T)
View(data360)
events <- StatsBombFreeEvents(MatchesDF = Matches, Parallel = T)
events <- allclean(events)
events <- get.opposingteam(events)
data360 = data360 %>% rename(id = event_uuid)
events = events %>% left_join(data360, by = c("id" = "id"))
events = events %>% rename(match_id = match_id.x) %>% select(-match_id.y)
new_player <-
function(player_id = integer(),
x = double(),
y = double(),
x_v = double(),
y_v = double()) {
vctrs::new_rcrd(
list(
player_id = player_id,
x = x,
y = y,
x_v = x_v,
y_v = y_v,
tti = -1 # dummy value
),
class = 'player'
)
}
ffs = events %>%
group_by(team.name) %>%
#  filter(type.name=="Pass") %>%
#  select(id, match_id, team.name, OpposingTeam, player.name, type.name, minute, second, pass.outcome.name, pass.shot_assist, location.x, location.y, pass.end_location.x, pass.end_location.y, pass.type.name, pass.cross, freeze_frame) %>%
ungroup()
View(ffs)
events$match_id
ffs = ffs %>%
filter(match_id=="3788741") %>%
unnest(freeze_frame) %>%
mutate(ff_location.x = (map(location, 1)), ff_location.y = (map(location, 2))) %>%
select(-location) %>%
mutate(ff_location.x = as.numeric(ifelse(ff_location.x == "NULL", NA, ff_location.x)), ff_location.y = as.numeric(ifelse(ff_location.y == "NULL", NA, ff_location.y)))
ffs = events %>%
group_by(team.name) %>%
filter(match_id=="3788741") %>%
select(id, match_id, team.name, OpposingTeam, player.name, type.name, minute, second, pass.outcome.name, pass.shot_assist, location.x, location.y, pass.end_location.x, pass.end_location.y, pass.type.name, pass.cross, freeze_frame) %>%
ungroup()
ffs = ffs %>% unnest(freeze_frame) %>%
mutate(ff_location.x = (map(location, 1)), ff_location.y = (map(location, 2))) %>%
select(-location) %>%
mutate(ff_location.x = as.numeric(ifelse(ff_location.x == "NULL", NA, ff_location.x)), ff_location.y = as.numeric(ifelse(ff_location.y == "NULL", NA, ff_location.y)))
View(ffs)
ffs = events %>%
group_by(team.name) %>%
filter(match_id=="3788741") %>%
select(id, match_id, team.name, OpposingTeam, player.name, type.name, minute, second, pass.outcome.name, pass.shot_assist, location.x, location.y, pass.end_location.x, pass.end_location.y, pass.type.name, pass.cross, freeze_frame) %>%
ungroup()
View(ffs)
View(events)
ffs = ffs %>% unnest(freeze_frame) %>%
mutate(ff_location.x = (map(location, 1)), ff_location.y = (map(location, 2))) %>%
select(-location) %>%
mutate(ff_location.x = as.numeric(ifelse(ff_location.x == "NULL", NA, ff_location.x)), ff_location.y = as.numeric(ifelse(ff_location.y == "NULL", NA, ff_location.y)))
tracking_start <- ffs %>%
filter(id=="27fdb7ff-f108-4d83-84bf-7d2dace7c40f")
View(tracking_start)
select(frame, ball_x, ball_y, side, player_id, x, y)
tracking_start <- ffs %>%
filter(id=="27fdb7ff-f108-4d83-84bf-7d2dace7c40f") %>%
mutate(
frame = (minute*60)+second,
ball_x = location.x,
ball_y = location.y,
side = ifelse(teammate=="TRUE", "home", "away"),
player_id = row_number(),
x = ff_location.x,
y = ff_location.y
) %>%
select(frame, ball_x, ball_y, side, player_id, x, y)
tracking_start$x_v <- sample(0:2, size = nrow(tracking_start), replace = TRUE)
View(tracking_start)
tracking_start$x_v <- sample(-100:100, size = nrow(tracking_start), replace = TRUE)/100
View(tracking_start)
tracking_start$y_v <- sample(-100:100, size = nrow(tracking_start), replace = TRUE)/100
test <- read.csv("https://raw.githubusercontent.com/sharmaabhishekk/random_stuff/997bbc1db47fc176569980fa369079f7cc083864/xt_derivation_julia/xt_pre_data.csv")
View(test)
library(tidyverse)
library (StatsBombR)
## Import SB Data ## -------------
Comp <- FreeCompetitions()
Matches <- FreeMatches(Comp)
Matches = Matches %>% filter(competition.competition_name=="UEFA Euro")
data360 <- StatsBombFree360Events(MatchesDF = Matches, Parallel = T)
events <- StatsBombFreeEvents(MatchesDF = Matches, Parallel = T)
events <- allclean(events)
events <- get.opposingteam(events)
data360 = data360 %>% rename(id = event_uuid)
events = events %>% left_join(data360, by = c("id" = "id"))
events = events %>% rename(match_id = match_id.x) %>% select(-match_id.y)
names(events)
events$period
events$timestamp
events$second
names(events)
install.packages("Rteta")
